----checking both my tables if they exist
SELECT *
FROM BRIGHTTV_CUSTOMERS.USER_PROFILE.USER_DATA;

SELECT *
FROM BRIGHTTV_CUSTOMERS.USER_PROFILE.VIEWERSHIP;

----joining both tables using full join to return all the rows from both tables
CREATE OR REPLACE TABLE BRIGHTTV_CUSTOMERS.USER_PROFILE.COMBINED_BRIGHTTV_DATA AS 
(
    SELECT 
        U.USERID AS USERID_PROFILE,
        U.NAME,
        U.SURNAME,
        U.GENDER,
        U.AGE,
        U.RACE,
        U.PROVINCE,
        V.CHANNEL2 AS TV_CHANNEL,
        V.RECORDDATE2 AS WATCH_DATE,
        V.DURATION2 AS WATCH_TIME,
        V.USERID AS USERID_VIEW
    FROM BRIGHTTV_CUSTOMERS.USER_PROFILE.USER_DATA AS U
    FULL JOIN BRIGHTTV_CUSTOMERS.USER_PROFILE.VIEWERSHIP AS V
        ON U.USERID = V.USERID
);

-----Removing columns i dont need 
ALTER TABLE BRIGHTTV_CUSTOMERS.USER_PROFILE.COMBINED_BRIGHTTV_DATA 
DROP COLUMN EMAIL, SOCIAL_MEDIA_HANDLE;

SELECT *
FROM BRIGHTTV_CUSTOMERS.USER_PROFILE. COMBINED_BRIGHTTV_DATA; 

----checking how many channels in this data
SELECT DISTINCT TV_CHANNEL
FROM BRIGHTTV_CUSTOMERS.USER_PROFILE. COMBINED_BRIGHTTV_DATA; 

----checking RACE in this data
SELECT DISTINCT RACE 
FROM BRIGHTTV_CUSTOMERS.USER_PROFILE. COMBINED_BRIGHTTV_DATA;

----counting gender in this data
SELECT GENDER, COUNT(*) AS count_gender
FROM BRIGHTTV_CUSTOMERS.USER_PROFILE. COMBINED_BRIGHTTV_DATA
GROUP BY GENDER
ORDER BY count_gender DESC;

----counting gender in this data
SELECT RACE, COUNT(*) AS count_race
FROM BRIGHTTV_CUSTOMERS.USER_PROFILE. COMBINED_BRIGHTTV_DATA
GROUP BY RACE
ORDER BY count_race DESC;

----Counting nulls in the dataset
SELECT
  COUNT_IF(NAME IS NULL)        AS no_name,
  COUNT_IF(SURNAME IS NULL)     AS no_surname,
  COUNT_IF(GENDER IS NULL)      AS no_gender,
  COUNT_IF(RACE IS NULL)        AS no_race,
  COUNT_IF(AGE IS NULL)         AS no_age,
  COUNT_IF(PROVINCE IS NULL)    AS no_province,
  COUNT_IF(TV_CHANNEL IS NULL)     AS no_channel,
  COUNT_IF(WATCH_DATE IS NULL)  AS no_watch_date,
  COUNT_IF(WATCH_TIME IS NULL)  AS no_watch_time
FROM BRIGHTTV_CUSTOMERS.USER_PROFILE.COMBINED_BRIGHTTV_DATA;

----Checking min and Max age
SELECT MIN (AGE)
FROM BRIGHTTV_CUSTOMERS.USER_PROFILE. COMBINED_BRIGHTTV_DATA;
SELECT MAX(AGE)
FROM BRIGHTTV_CUSTOMERS.USER_PROFILE.USER_DATA;
BRIGHTTV_CUSTOMERS.USER_PROFILE. COMBINED_BRIGHTTV_DATA; 

----Checking min and Max watchtime
SELECT MIN (WATCH_TIME)
FROM BRIGHTTV_CUSTOMERS.USER_PROFILE. COMBINED_BRIGHTTV_DATA; 
SELECT MAX(WATCH_TIME)
FROM BRIGHTTV_CUSTOMERS.USER_PROFILE. COMBINED_BRIGHTTV_DATA; 

-------This will add a new column for watch_date 
    ALTER TABLE BRIGHTTV_CUSTOMERS.USER_PROFILE.COMBINED_BRIGHTTV_DATA
    ADD COLUMN WATCH_DATE_NEW DATE;

-----Convert string DATE to DATE permanently in a new column 
UPDATE BRIGHTTV_CUSTOMERS.USER_PROFILE.COMBINED_BRIGHTTV_DATA
SET WATCH_DATE_NEW = TO_TIMESTAMP(WATCH_DATE, 'YYYY/MM/DD HH24:MI');

----Deleting the old watch date column
ALTER TABLE BRIGHTTV_CUSTOMERS.USER_PROFILE.COMBINED_BRIGHTTV_DATA
DROP COLUMN WATCH_DATE;

----Renaming the new Watch date column
ALTER TABLE BRIGHTTV_CUSTOMERS.USER_PROFILE.COMBINED_BRIGHTTV_DATA
RENAME COLUMN WATCH_DATE_NEW TO WATCH_DATE;

---------GROUPING THE DATE--------
    SELECT*,

 ------This will extract the day of the month from the PURCHASED DATE
         DAYOFMONTH(WATCH_DATE) AS DAY_OF_THE_MONTH,
         
-------This extracts the Month Name from Purchased Date  
        MONTHNAME(WATCH_DATE) AS MONTH_NAME,

-------This extracts a Year from Purchased Date  
        YEAR(TO_DATE(WATCH_DATE)) AS YEAR,    

-------This will extract the day of the week from Purchased Date 
        DAYNAME(WATCH_DATE) AS DAY_OF_THE_WEEK,  

--------GROUPING THE DATE INTO WEEKENDS AND WEEKDAYS TO BE ABLE TO COMPARE REVENUE BETWEEN WEEKENDS AND WEEKDAYS-----
        CASE
            WHEN DAY_OF_THE_WEEK IN('Sat', 'Sun') THEN 'Weekend'
            ELSE 'Weekday'
         END AS DAY_CATEGORY,

---------CLASSIFYING THE TIME -------
        CASE 
             WHEN WATCH_TIME BETWEEN '00:00:00' AND '05:59:59' THEN 'Early Morning: 12am to 6am'
             WHEN WATCH_TIME BETWEEN '06:00:00' AND '11:59:59' THEN 'Morning: 6am to 12pm'
             WHEN WATCH_TIME BETWEEN '12:00:00' AND '13:59:59' THEN 'During The Day: 12pm to 2pm'
             WHEN WATCH_TIME BETWEEN '14:00:00' AND '16:59:59' THEN 'Afternoon: 2pm to 5pm'
             WHEN WATCH_TIME BETWEEN '17:00:00' AND '20:59:59' THEN 'Early Evening: 5pm to 9pm'
             ELSE 'Late Evening: 10pm to 12pm'
         END AS time_of_the_day_bucket,

-------CLASSIFYING AGE------         
CASE 
             WHEN AGE BETWEEN '0' AND '14' THEN 'Kids: 0 to 14'
             WHEN AGE BETWEEN '15' AND '19' THEN 'Teenagers: 15 t0 19'
             WHEN AGE BETWEEN '20' AND '30' THEN 'Young Adults: 20 to 30'
             WHEN AGE BETWEEN '31' AND '49' THEN 'Adults: 31 to 49'
             ELSE 'Elder: 50 to 114'
         END AS AGE_bucket,

        FROM BRIGHTTV_CUSTOMERS.USER_PROFILE. COMBINED_BRIGHTTV_DATA
        GROUP BY ALL;
